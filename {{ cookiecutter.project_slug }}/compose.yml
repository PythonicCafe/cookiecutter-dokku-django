version: "3.8"

services:
  web:
    env_file:
      - "docker/env/web"
      - "docker/env/web.local"
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        DEV_BUILD: "true"
    pull_policy: build
    image: {{ cookiecutter.project_slug }}-web:latest
    command: bash -c "/app/bin/release.sh && /app/bin/web.sh"
    volumes:
      - ${PWD}/docker/data/web:/data
      - ${PWD}:/app
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
{%- if cookiecutter.enable_celery == "y" or cookiecutter.enable_redis == "y" %}
      messaging:
        condition: service_started
{%- endif %}

{%- if cookiecutter.enable_celery == "y" %}
  worker:
    env_file:
      - "docker/env/web"
      - "docker/env/web.local"
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        DEV_BUILD: "true"
    pull_policy: build
    image: {{ cookiecutter.project_slug }}-web:latest
    command: /app/bin/worker.sh
    volumes:
      - ${PWD}/docker/data/web:/data
      - ${PWD}:/app
    depends_on:
      db:
        condition: service_healthy
      messaging:
        condition: service_started

{%- endif %}
  db:
    env_file:
      - "docker/env/db"
      - "docker/env/db.local"
    user: "${UID:-1000}:${GID:-1000}"
    shm_size: "{{ cookiecutter.db_shm_size }}"
{%- if cookiecutter.database_software == "postgres" %}
    image: "{{ cookiecutter.postgres_image }}:{{ cookiecutter.postgres_version }}"
    command: -c "config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - ${PWD}/docker/data/db:/var/lib/postgresql/data
      - ${PWD}/docker/conf/db/postgresql.dev.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      retries: 5
{%- elif cookiecutter.database_software == "mariadb" %}
    image: "{{ cookiecutter.mariadb_image }}:{{ cookiecutter.mariadb_version }}"
    volumes:
      - ${PWD}/docker/data/db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh --su=mysql --connect --innodb_initialized"]
{%- endif %}
{%- if cookiecutter.enable_mailhog == "y" %}
  mail:
    image: "{{ cookiecutter.mailhog_image }}:{{ cookiecutter.mailhog_version }}"
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - "docker/env/mail"
      - "docker/env/mail.local"
    volumes:
      - ${PWD}/docker/data/mail:/data
    ports:
      - "8025:8025"

{%- endif %}
{%- if cookiecutter.enable_celery == "y" or cookiecutter.enable_redis == "y" %}
  messaging:
    image: "{{ cookiecutter.redis_image }}:{{ cookiecutter.redis_version }}"
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - "docker/env/messaging"
      - "docker/env/messaging.local"
    volumes:
      - ${PWD}/docker/data/messaging:/data

{%- endif %}

{%- if cookiecutter.enable_minio == "y" %}
  storage:
    image: "{{ cookiecutter.minio_image }}:{{ cookiecutter.minio_version }}"
    env_file:
      - "docker/env/storage"
      - "docker/env/storage.local"
    volumes:
      - ${PWD}/docker/data/storage:/data
    ports:
      - 9000:9000
      - 9001:9001
    command: ["server", "/data", "--console-address", ":9001"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/index.html || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
{%- endif %}
